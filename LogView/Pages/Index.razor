@page "/"

@using System.Text.RegularExpressions

<InputFile OnChange="@LoadFiles" multiple />

@code {

    private async Task LoadFiles(InputFileChangeEventArgs e)
    {
        foreach (var file in e.GetMultipleFiles())
        {
            try
            {
                //var stream = file.OpenReadStream(100000000);
                //var line = await new StreamReader(file.OpenReadStream(100000000)).ReadLineAsync();
                using (var reader = new StreamReader(file.OpenReadStream(100000000)))
                {
                    var line = "";
                    while (line != null) //await reader.ReadLineAsync() != null
                    {
                        line = await reader.ReadLineAsync();

                        //var pattern = @"(\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}(?:\W+)(\d{2}|\d{4})/(\d{2}|\w{3})/(\d{2}|\d{4})(?:\:|\s+)[0-9]{2}:[0-9]{2}:[0-9]{2}(?:.+?)(POST|GET|HEAD|PUT|OPTION))";
                        var pattern = @"([0-9]+\.[0-9]+\.[0-9]+\.[0-9]+) - - \[(\d{2}\/\w{3}\/\d{4}:\d{2}:\d{2}:\d{2} \+\d{4})\]";

                        Regex regex = new Regex(pattern);
                        MatchCollection matches = regex.Matches(line);
                        if (matches.Count > 0)
                        {
                            foreach (Match match in matches)
                            {
                                if (match.Groups?.Count > 0)
                                {
                                    var ip = match.Groups[1].ToString();
                                    var date_str = match.Groups[2].ToString();
                                    var newDate_str = date_str.Remove(date_str.IndexOf(':'), 1).Insert(date_str.IndexOf(':'), " ");
                                    var date = DateTime.Parse(newDate_str);
                                    /*foreach (var group in match.Groups)
                                    {
                                        Console.WriteLine(group.ToString());
                                    }*/

                                }
                            }
                        }
                        else
                        {
                            Console.WriteLine("Совпадений не найдено");
                        }
                    }
                }
            }
            catch (Exception ex)
            {
                Console.WriteLine(ex.Message);
            }
        }        
    }
}